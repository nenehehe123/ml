import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score

from google.colab import drive
drive.mount('/content/drive')

# Load dataset
data = pd.read_csv('/content/drive/MyDrive/ML/ex-5.csv', names=['message', 'label'])
print("Total Instances:", data.shape[0])

# Convert 'pos' to 1, 'neg' to 0
data['labelnum'] = data.label.map({'pos': 1, 'neg': 0})

X = data.message
y = data.labelnum

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)

# Vectorize text into word counts
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Train Naive Bayes Classifier
clf = MultinomialNB()
clf.fit(X_train_vec, y_train)

# Predict and print predictions
y_pred = clf.predict(X_test_vec)
for msg, pred in zip(X_test, y_pred):
    label = 'pos' if pred == 1 else 'neg'
    print(f"{msg} â†’ {label}")

# Accuracy, Precision, Recall
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)

# Bar chart
metrics = ['Accuracy', 'Recall', 'Precision']
values = [accuracy, recall, precision]

plt.figure(figsize=(8, 6))
plt.bar(metrics, values, color=['blue', 'green', 'orange'])
plt.title('Model Performance Metrics')
plt.ylim(0, 1)
plt.ylabel("Score")
plt.show()

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6, 5))
sns.heatmap(cm, annot=True, cmap="Blues", fmt="d", xticklabels=['neg', 'pos'], yticklabels=['neg', 'pos'])
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("True")
plt.show()

# Print scores
print("\nFinal Scores:")
print("Accuracy:", accuracy)
print("Precision:", precision)
print("Recall:", recall)
print("Confusion Matrix:\n", cm)
